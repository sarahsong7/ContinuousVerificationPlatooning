dtmc

const double av1;
const double ve1=0.5;
const double av2=0.5;
const double ve2=0.5;
const double av3=0.5;
const double ve3=0.5;
const double av4=0.5;
const double ve4=0.5;
const double av5=0.5;
const double ve5=0.5;
const double av21=0.5;
const double ve21=0.5;

module Peer1
	isListed1: bool init true;
	status1: [0..5] init 0;
//  0:none, 1:started, 2:available, 3:unavailable, 4:sucess, 5:failure
	remainBit1: [0..10] init 10;

	[C1request] isListed1 -> (status1'=1) & (isListed1'=false);
	[] status1 = 1 -> av1: (status1'=2) + 1-av1: (status1'=3);
	[C1trans] status1 = 2 & remainBit1 > 0 -> ve1: (remainBit1'=remainBit1-1) + 1-ve1: true;
	[C1done] status1 = 2 & remainBit1 = 0 -> (status1'=4);
	[C1X] status1 = 3 -> (status1'=5);
	[] status1 = 0 -> true;
endmodule

module Peer2 = Peer1[C1request=C2request, C1trans=C2trans, C1done=C2done, C1X=C2X, isListed1=isListed2, av1=av2, ve1=ve2, status1=status2, remainBit1=remainBit2] endmodule
module Peer3 = Peer1[C1request=C3request, C1trans=C3trans, C1done=C3done, C1X=C3X, isListed1=isListed3, av1=av3, ve1=ve3, status1=status3, remainBit1=remainBit3] endmodule
module Peer4 = Peer1[C1request=C4request, C1trans=C4trans, C1done=C4done, C1X=C4X, isListed1=isListed4, av1=av4, ve1=ve4, status1=status4, remainBit1=remainBit4] endmodule
module Peer5 = Peer1[C1request=C5request, C1trans=C5trans, C1done=C5done, C1X=C5X, isListed1=isListed5, av1=av5, ve1=ve5, status1=status5, remainBit1=remainBit5] endmodule

module Client
	C1stat: [1..4] init 1;
//  0: none, 1:start, 2:transmit, 3:sucess, 4:fail
	C2stat: [1..4] init 1;
	C3stat: [1..4] init 1;
	C4stat: [1..4] init 1;
	C5stat: [1..4] init 1;

	transmissionT1: [0..3] init 0;
	transmissionT2: [0..3] init 0;
	transmissionT3: [0..3] init 0;
	transmissionT4: [0..3] init 0;
	transmissionT5: [0..3] init 0;
	
	[C1request] C1stat=1 -> (C1stat'=2);
	[C1trans] transmissionT1<3 -> (transmissionT1'=transmissionT1+1);
	[C1done] C1stat=2 -> (C1stat'=3);
	[C1X] C1stat=3 -> (C1stat'=4);
	
	[C2request] C2stat=1 -> (C2stat'=2);
	[C2trans] transmissionT2<3 -> (transmissionT2'=transmissionT2+1);
	[C2done] true -> (C2stat'=3);
	[C2X] true -> (C2stat'=4);

	[C3request] C3stat=1 -> (C3stat'=2);
	[C3trans] transmissionT3<3 -> (transmissionT3'=transmissionT3+1);
	[C3done] true -> (C3stat'=3);
	[C3X] true -> (C3stat'=4);

	[C4request] C4stat=1 -> (C4stat'=2);
	[C4trans] transmissionT4<3 -> (transmissionT4'=transmissionT4+1);
	[C4done] true -> (C4stat'=3);
	[C4X] true -> (C4stat'=4);
	
	[C5request] C5stat=1 -> (C5stat'=2);
	[C5trans] transmissionT5<3 -> (transmissionT5'=transmissionT5+1);
	[C5done] true -> (C5stat'=3);
	[C5X] true -> (C5stat'=4);
endmodule